from tkinter import *
from tkinter import ttk
import tkinter.messagebox
import sqlite3



class student:
    def __init__(self,window):
        
        s=database()
        s.conn()
         
        self.window=window
        self.window.title("Student Management System ")
        self.window.geometry("1380x800")
        self.lbl1=Label(self.window , text="Student Management System" , font=("Elephant" , 40 , "bold") , bg="lightblue", fg="Red" )
        self.lbl1.place(x=303 , y=5)


        ##########################################################################################################################
        Rollno=StringVar()
        Name=StringVar()
        Emailid=StringVar()
        DOB=StringVar()
        Gender=StringVar()
        Mobileno=StringVar() 
        Address=StringVar()
        
              
        ############################################################################################################################

        def iExit():
            iExit=tkinter.messagebox.askyesno("Student Management System","Confirm if you want to exit")
            if iExit > 0:
                window.destroy()
                return

        def cleardata():
            print("clear are open")
            global expression
            expression = " "
            Rollno.set("")
            Name.set("")
            Emailid.set("")
            DOB.set("")
            Gender.set("")
            Mobileno.set("") 
            Address.set("")
            print("clear are finish")

            


        def insert():

            if(len(Rollno.get())!=0):
                s.insert(Rollno.get() , Name.get() , Emailid.get() , DOB.get() , Gender.get() , Mobileno.get() , Address.get())
                table.delete(0 ,END)
                table.insert(END , (Rollno.get() , Name.get() , Emailid.get() , DOB.get() , Gender.get() , Mobileno.get() , Address.get()))
                displylist()
                
            else:
                tkinter.messagebox.askyesno("Student Management System","Enter Rollno ")
            print("insert method")

        def dispalylist():
            print("display the data")
            table.delete(0 ,END)
            for row in s.display():
                table.insert(END , row ,str(""))
            print("display finish")


        def studentrec(event):
            print("studentrec open")
            global st

            searchst=table.curselection()[0]
            st = table.get(searchst)

            self.txtRollno.delete(0 ,END)
            self.txtRollno.insert(END ,st[0])
            
            self.txtName.delete(0 ,END)
            self.txtName.insert(END ,st[1])
            
            self.txtEmailid.delete(0 ,END)
            self.txtEmailid.insert(END ,st[2])
            
            self.txtDOB.delete(0 ,END)
            self.txtDOB.insert(END ,st[3])
            
            self.txtGender.delete(0 ,END)
            self.txtGender.insert(END ,st[4])
            
            self.txtMobileno.delete(0 ,END)
            self.txtMobileno.insert(END ,st[5])
            
            self.txtAddress.delete(0 ,END)
            self.txtAddress.insert(END ,st[6])

            print("studentrec is finish")

        def delete():
            print("delete function")
            if(len(Rollno.get())!=0):
                s.delete(st[0])
                cleardata()
                dispalylist()
            print("delete finish")



        def search():
            print("search method open")
            table.delete(0 ,END)
            for row in s.search(Rollno.get() ,Name.get() , Emailid.get() , DOB.get() , Gender.get() , Mobileno.get() , Address.get()):
                table.insert(END ,row,str(""))
            print("search method finish")

            
        def update():
            print("update is open")
            if(len(Rollno.get())!=0):
                print("st[0]",st[s])
                p.delete(st[0])
            if(len(Rollno.get())!=0):
                s.insert(Rollno.get() ,Name.get() , Emailid.get() , DOB.get() , Gender.get() , Mobileno.get() , Address.get())
                table.delete(0 ,END)
                table.insert(END ,Rollno.get() ,Name.get() , Emailid.get() , DOB.get() , Gender.get() , Mobileno.get() , Address.get())
            print("update is finish")
                
        
        #############################################################################################################################
        

        fram1=Frame(self.window, bd=4 , relief=RIDGE , bg="lightskyblue")
        fram1.place(x=10 , y=100 , width= 450 , height=580)

        lbl2=Label(fram1 , text="Manage Students :" , font=("arial", 25,"bold"), fg="Black" , bg="lightskyblue" )
        lbl2.place(x=10, y=10)

        self.lbl3=Label(fram1, text="Roll No.:" , bg="lightskyblue", fg="blue" , font=("arial", 19,"bold") )
        self.lbl3.place(x=10,y=60)
        self.t1=Entry(fram1 ,font=("arial", 16,) , bd=4 , textvariable=Rollno) 
        self.t1.place(x=120,y=60)

        self.lbl4=Label(fram1, text="Name :" , bg="lightskyblue", fg="blue" , font=("arial", 19,"bold") )
        self.lbl4.place(x=10,y=120)
        self.t2=Entry(fram1 ,font=("arial", 16,) , bd=4 ,textvariable=Name) 
        self.t2.place(x=120,y=120)

        self.lbl5=Label(fram1, text="Email Id:" , bg="lightskyblue", fg="blue" , font=("arial", 19,"bold") )
        self.lbl5.place(x=10,y=180)
        self.t3=Entry(fram1 ,font=("arial", 16,) , bd=4 ,textvariable=Emailid) 
        self.t3.place(x=120,y=180)


        self.lbl6=Label(fram1, text="D.O.B:" , bg="lightskyblue", fg="blue" , font=("arial", 19,"bold") )
        self.lbl6.place(x=10,y=230)
        self.t4=Entry(fram1 ,font=("arial", 16,) , bd=4 , textvariable=DOB) 
        self.t4.place(x=120,y=230)



        self.lbl7=Label(fram1, text="Gender:" , bg="lightskyblue", fg="blue" , font=("arial", 19,"bold") )
        self.lbl7.place(x=10,y=280)
        self.com1=ttk.Combobox(fram1 , font=("arial", 15 , "bold") , textvariable=Gender)
        self.com1['values']=("MALE" , "FEMALE" , "OTHER")
        self.com1.place(x=120,y=280)



        self.lbl8=Label(fram1, text="Mobile No.:" , bg="lightskyblue", fg="blue" , font=("arial", 19,"bold") )
        self.lbl8.place(x=10,y=340)
        self.t6=Entry(fram1 ,font=("arial", 16,) , bd=4 , textvariable=Mobileno ) 
        self.t6.place(x=150,y=340)

        self.lbl9=Label(fram1, text="Address:" , bg="lightskyblue", fg="blue" , font=("arial", 19,"bold") )
        self.lbl9.place(x=10,y=390)
        self.t7=Entry(fram1 ,font=("arial", 16,) , bd=4 , textvariable=Address) 
        self.t7.place(x=130,y=390)

    
        #########################btn##########################################
    

        self.add=Button(fram1, text=("Add") , width=5 , fg="red" , bg="lightblue" , command=insert )
        self.add.place(x=10, y=480)


        self.display=Button(fram1, text=("Display") , width=5 , fg="red" , bg="lightblue" , command=dispalylist )
        self.display.place(x=90 , y=480)
        

        self.clear=Button(fram1, text=("Clear") , width=5 , fg="red" , bg="lightblue" ,command=cleardata)
        self.clear.place(x=160 , y=480)

        self.delete=Button(fram1 , text=("Delete") , width=5 , fg="red" , bg="lightblue" , command=delete)
        self.delete.place(x=230 , y=480)

        self.update=Button(fram1, text=("Update") , width=5 , fg="red" , bg="lightblue" )
        self.update.place(x=300 , y=480)


        self.exit=Button(fram1, text=("Exit") , width=5 , fg="red" , bg="lightblue" ,command=iExit )
        self.exit.place(x=360 , y=480)


        ####################detail#################################################
        

        fram2=Frame(self.window, bd=4 , relief=RIDGE , bg="lightskyblue")
        fram2.place(x=500 , y=100 , width= 850 , height=580)

        lbl10=Label(fram2, text="Search By :" , bg="lightskyblue", fg="blue" , font=("arial", 20,"bold") )
        lbl10.place(x=6,y=10)

        com2=ttk.Combobox(fram2 , width=10 ,  font=("arial", 15 , "bold"))
        com2['values']=("Roll No." , "Name" )
        com2.place(x=170,y=10)

        t8=Entry(fram2 , width=12 , font=("arial", 16,) , bd=4) 
        t8.place(x=350,y=10)

        
        self.sebtn=Button(fram2,width=8 , text=("Search") , fg="Blue" , bg="lightblue" , command=search)
        self.sebtn.place(x=540 , y=10)

        self.seallbtn=Button(fram2, width=9 ,  text=("Search All") , fg="Blue" , bg="lightblue")
        self.seallbtn.place(x=630 , y=10)

        #####################Table#####################################
        
        fram3=Frame(fram2, bd=4 , relief=RIDGE , bg="lightblue")
        fram3.place(x=15 , y=55 , width= 818 , height=400)

        scroll=Scrollbar(fram3)
        scroll.pack(side=RIGHT , fill=Y)

        table=Listbox(fram3, width=50, height=16 , font=("arial" , 20 , "bold") , yscrollcommand=scroll.set)
        table.bind('<<ListboxSelect>>',studentrec)
        table.pack()
        scroll.config(command=table.yview)
        


class database:
    def conn(self):
        print("database: connect method")
        con=sqlite3.connect("rupalibharambe.db")
        cur=con.cursor()
        query=("CREATE TABLE  IF NOT EXISTS student(ROLL INTEGER PRIMARY KEY,\
                                                        ROLLNO TEXT , NAME TEXT  , EMAILID TEXT  , GENDER TEXT , MOBILENO TEXT ,ADDRESS TEXT )")

        cur.execute(query)
        con.commit()
        con.close()
        print("database open")

    def insert(self,Rollno , Name , Emailid , DOB , Gender , Mobileno ,  Address):
        print("open insert")
        con=sqlite3.connect("rupalibharambe.db")
        cur=con.cursor()
        query="INSERT INTO student VALUES (?,?,?,?,?,?,?)"
        cur.execute(query,(Rollno ,Name , Emailid , DOB , Gender , Mobileno ,  Address))
        con.commit()
        con.close()
        print("insert are done")


    def display(self):
       print("diaplay the data")
       con=sqlite3.connect("rupalibharambe.db")
       cur=con.cursor()
       query=("SELECT * FROM student")
       cur.execute(query)
       rows=cur.fetchall()
       con.close()
       print("display are done")
       return rows
            


    def delete(self):
       print("delete data",Rollno)
       con=sqlite3.connect("rupalibharambe.db")
       cur=con.cursor()
       cur.execute("DELETE FROM student WHERE Roll No=?" ,(RollNo))
       con.commite()
       con.close()
       print(RollNo,"delete done\n")


    def search(self ,Rollno="" , Name="" , Emailid="" , DOB="" , Gender="" , Mobileno="" , Address=""):
        print("search ")
        con=sqlite3.connect("rupalibharambe.db")
        cur=con.cursor()
        cur.execute("SELECT * FROM student WHERE Rollno=? OR Name=? OR  Emailid=? OR DOB=? OR Gender=? OR Mobileno=? OR Address=?",(Rollno , Name, Emailid , DOB , Gender , Mobileno , Address))
        rows=cur.fetchall()
        con.close()
        print("serch finish\n")
        return rows
    



    def update(self ,Rollno="" , Name="" , Emailid="" , DOB="" , Gender="" , Mobileno="" , Address=""):
       print("update",Rollno)
       con=sqlite3.connect("rupalibharambe.db")
       cur=con.cursor()
       cur.execute("UPDATE student SET Rollno=? or Name=? or Emailid=? or DOB=? or\
                                          Gender=? or Mobileno=? or Address=?  WHERE Rollno=?" ,(Rollno , Name , Emailid , DOB , Gender , Mobileno ,  Address ))
       con.commite() 
       con.close()
       print(Rollno,"update finish\n")

    




if __name__=='__main__':
    window=Tk()
    application = student(window)
    window.mainloop()
